// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package approntocommon.actions;

import java.util.Stack;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.ICoreAction;
import com.mendix.webui.CustomJavaAction;

public class GetCurrentMicroflow extends CustomJavaAction<java.lang.String>
{
	private java.lang.Long level;

	public GetCurrentMicroflow(IContext context, java.lang.Long level)
	{
		super(context);
		this.level = level;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		// BEGIN USER CODE
		int intLevel = level != null ? level.intValue() : 1;
		IContext context = this.getContext();
		Stack<ICoreAction<?>> coreAction;
		ICoreAction<?> nthCoreAction;
		String microflowName = "";
		if (context!=null){
			Core.getLogger(this.toString()).trace("Context exists");
			coreAction = context.getActionStack();

			if (coreAction!=null){
				int actionStackSize = coreAction.size();
				Core.getLogger(this.toString()).trace("coreAction exists with size: " + actionStackSize);
				// determine the level to get the stackaction from. The actionStack contains all levels of microflows currently active, so also all sublevels. 
				int Level = (actionStackSize - intLevel) - 1;
				// make sure the ArrayIndexOutOfBounds exception can't occur
				if ((Level >= 0) && (Level < actionStackSize)){
					Core.getLogger(this.toString()).trace("get on " + Level + " nth element");
					nthCoreAction = coreAction.get(Level);
					if (nthCoreAction!=null){
						Core.getLogger(this.toString()).trace("nthCoreAction exists with name " + nthCoreAction.getMetaInfo().toString());
						microflowName = nthCoreAction.getActionName();
					}
				}
			}
		}
	
		return microflowName;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetCurrentMicroflow";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
