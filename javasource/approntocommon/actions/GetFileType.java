// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package approntocommon.actions;

import java.io.InputStream;
import org.apache.tika.Tika;
import org.apache.tika.io.TikaInputStream;
import org.apache.tika.metadata.Metadata;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

/**
 * Returns the file type (MIME type) of the input file.
 */
public class GetFileType extends CustomJavaAction<java.lang.String>
{
	private IMendixObject __inputFile;
	private system.proxies.FileDocument inputFile;

	public GetFileType(IContext context, IMendixObject inputFile)
	{
		super(context);
		this.__inputFile = inputFile;
	}

	@java.lang.Override
	public java.lang.String executeAction() throws Exception
	{
		this.inputFile = this.__inputFile == null ? null : system.proxies.FileDocument.initialize(getContext(), __inputFile);

		// BEGIN USER CODE
		IContext context = this.context();

		if (inputFile != null && inputFile.getHasContents(context)) {
			FileTypeChecker fileTypeChecker = new FileTypeChecker();
			return fileTypeChecker.getFileType(__inputFile, context);
		}

		else {
			throw new NullPointerException("Empty input file in FileIdentifier.");
		}
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetFileType";
	}

	// BEGIN EXTRA CODE
	public class FileTypeChecker {

		public String getFileType(IMendixObject inputFile, IContext context) throws Exception {

			InputStream inputStream = null;
			TikaInputStream tikaStream = null;
			String mimeType;

			try {
				Tika tika = new Tika();
				inputStream = Core.getFileDocumentContent(context,inputFile);
				tikaStream = TikaInputStream.get(inputStream);
				Metadata metadata = new Metadata();
				mimeType = tika.detect(tikaStream, metadata);
				
			} finally {
				if (inputStream != null) {
					inputStream.close();
				}
				
				if (tikaStream != null) {
					tikaStream.close();
				}
			}

			return mimeType.toString();
		}
	}
	// END EXTRA CODE
}
