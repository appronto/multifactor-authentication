// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package approntocommon.actions;

import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.EnumSet;
import java.util.Set;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;

/**
 * Calculates the number of workdays between two dates(so the number of days excluding saturdays and sundays).
 */
public class WorkdaysBetween extends CustomJavaAction<java.lang.Long>
{
	private java.util.Date StartDate;
	private java.util.Date EndDate;

	public WorkdaysBetween(IContext context, java.util.Date StartDate, java.util.Date EndDate)
	{
		super(context);
		this.StartDate = StartDate;
		this.EndDate = EndDate;
	}

	@java.lang.Override
	public java.lang.Long executeAction() throws Exception
	{
		// BEGIN USER CODE
		LocalDate startDate = StartDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
		LocalDate endDate = EndDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
		Set<DayOfWeek> weekend = EnumSet.of(DayOfWeek.SATURDAY, DayOfWeek.SUNDAY);
		final long workDaysBetween = startDate.datesUntil(endDate)
		        .filter(d -> !weekend.contains(d.getDayOfWeek()))
		        .count();
		return workDaysBetween;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "WorkdaysBetween";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
