// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package approntocommon.actions;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import com.itextpdf.text.Document;
import com.itextpdf.text.PageSize;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfImportedPage;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfWriter;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class MergeOverlay extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __background;
	private system.proxies.FileDocument background;
	private IMendixObject __target;
	private system.proxies.FileDocument target;
	private java.lang.Long start;
	private java.lang.Long end;

	public MergeOverlay(IContext context, IMendixObject background, IMendixObject target, java.lang.Long start, java.lang.Long end)
	{
		super(context);
		this.__background = background;
		this.__target = target;
		this.start = start;
		this.end = end;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.background = __background == null ? null : system.proxies.FileDocument.initialize(getContext(), __background);

		this.target = __target == null ? null : system.proxies.FileDocument.initialize(getContext(), __target);

		// BEGIN USER CODE
		synchronized (this) {
	     
			MergeOverlay.uniqueTMPId++;
			
			InputStream overlay = Core.getFileDocumentContent(this.getContext(), this.__background);
			InputStream target = Core.getFileDocumentContent(this.getContext(), this.__target);
			
			File tmpFile = new File(Core.getConfiguration().getTempPath() + "/document_tmp"+MergeOverlay.uniqueTMPId);
		
			PdfReader readerTarget = new PdfReader(target);
			PdfReader readerOverlay = new PdfReader(overlay);
	
			// output document
			Document document = new Document(PageSize.A4);
	        PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(tmpFile));
	        document.open();
	        
	        // step 4
	        PdfContentByte canvas = writer.getDirectContent();
	        int pages = readerTarget.getNumberOfPages();
	        PdfImportedPage overlayPage = writer.getImportedPage(readerOverlay, 1);
	        canvas.addTemplate(overlayPage, 1f, 0, 0, 1, 0, 0);
	      
	        for (int i=1; i<= pages; i++) {
	
	           //add overlay
	    		if(i >= this.start && (this.end == null || i <= this.end) )
	            	canvas.addTemplate(overlayPage, 1f, 0, 0, 1, 0, 0);
	    		
	    		//add page
	    		PdfImportedPage page = writer.getImportedPage(readerTarget, i);
	            canvas.addTemplate(page, 1f, 0, 0, 1, 0, 0);
	            document.newPage();
	            
	        	
	        	
	        }
	        
	        // step 5
	        document.close();
	        
	        Core.storeFileDocumentContent(this.getContext(), __target, new FileInputStream(tmpFile));
	        
	        tmpFile.delete();
	       
	     }
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "MergeOverlay";
	}

	// BEGIN EXTRA CODE

	private static int uniqueTMPId = 0;
	// END EXTRA CODE
}
