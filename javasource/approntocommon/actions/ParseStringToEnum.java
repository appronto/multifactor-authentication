// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package approntocommon.actions;

import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.meta.IMetaEnumValue;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive;
import com.mendix.systemwideinterfaces.core.meta.IMetaPrimitive.PrimitiveType;

/**
 * Returns true when correctly matching string value to enum.
 */
public class ParseStringToEnum extends CustomJavaAction<java.lang.Boolean>
{
	private java.lang.String StringToParse;
	private java.lang.String EnumName;
	private IMendixObject EnumObject;

	public ParseStringToEnum(IContext context, java.lang.String StringToParse, java.lang.String EnumName, IMendixObject EnumObject)
	{
		super(context);
		this.StringToParse = StringToParse;
		this.EnumName = EnumName;
		this.EnumObject = EnumObject;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		// BEGIN USER CODE
		//Search for attribute in object using the enum name
		if ( EnumObject.getMember(this.getContext(), this.EnumName ) != null ) {
			//Check if requested ENUM existis in the object 
			for( IMetaPrimitive metaPrimitive : EnumObject.getMetaObject().getMetaPrimitives() )
			{
				//Search using Name and Type
				if( metaPrimitive.getType() == PrimitiveType.Enum && metaPrimitive.getName().equals(this.EnumName) )
				{						
					//Get all enum values
					for( IMetaEnumValue metaEnumValue : metaPrimitive.getEnumValues() )
					{
						//If the value corresponds to the string value you want to parse fill the object with the correct value.
						if ( metaEnumValue.getIdentifier().equals(StringToParse) ) {
							EnumObject.setValue(this.context(), EnumName, metaEnumValue.getIdentifier() );
							return true;
						}
					}
				}	
			}
		}
		return false;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "ParseStringToEnum";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
