// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package mxmodelreflection.actions;

import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.systemwideinterfaces.core.IMendixObjectMember;
import com.mendix.webui.CustomJavaAction;
import com.mendix.webui.FeedbackHelper;
import mxmodelreflection.DataParser;
import mxmodelreflection.proxies.AttributeTypes;
import mxmodelreflection.proxies.TestPattern;

public class TestThePattern extends CustomJavaAction<java.lang.Boolean>
{
	private IMendixObject __TestPatternObj;
	private mxmodelreflection.proxies.TestPattern TestPatternObj;

	public TestThePattern(IContext context, IMendixObject TestPatternObj)
	{
		super(context);
		this.__TestPatternObj = TestPatternObj;
	}

	@java.lang.Override
	public java.lang.Boolean executeAction() throws Exception
	{
		this.TestPatternObj = this.__TestPatternObj == null ? null : mxmodelreflection.proxies.TestPattern.initialize(getContext(), __TestPatternObj);

		// BEGIN USER CODE

		IMendixObjectMember<?> member = null;
		AttributeTypes attributeType = TestPatternObj.getAttributeTypeEnum(getContext());

		if (attributeType != null) {
			TestPattern.MemberNames memberName = null;

			switch (attributeType) {
				case AutoNumber:
				case LongType:
					memberName = TestPattern.MemberNames.LongAttribute;
					break;
				case BooleanType:
					memberName = TestPattern.MemberNames.BooleanAttribute;
					break;
				case Decimal:
					memberName = TestPattern.MemberNames.DecimalAttribute;
					break;
				case EnumType:
				case StringType:
				case HashString:
					memberName = TestPattern.MemberNames.StringAttribute;
					break;
				case DateTime:
					memberName = TestPattern.MemberNames.DateTimeAttribute;
					break;
				case IntegerType:
					memberName = TestPattern.MemberNames.IntegerAttribute;
					break;
				default:
					throw new MendixRuntimeException("Unsupported Type : "+attributeType);
			}

			if (memberName != null) {
				member = TestPatternObj.getMendixObject().getMember(getContext(), memberName.toString());
			}
		}

		String replacementValue = DataParser.getStringValue(member, this.TestPatternObj.getDisplayPattern(), getContext());
		
		this.TestPatternObj.setResult( replacementValue );
		
		FeedbackHelper.addRefreshObjectFeedback(getContext(), this.TestPatternObj.getMendixObject().getId());
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "TestThePattern";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
